####################################
# Configuration file for Contract Registry Parser App
####################################

spark{
	#Spark master for whole application. yarn or local (local[n])
	spark_master = "yarn"
	
	#Application name used for Spark Session
	app_name = "ContractRegistry"
	
	#Log level to display
	log_level = "INFO"
}

application{
	#Indicates whether HDFS is used or everything runs locally
	using_hdfs = true
	
	#File format used for data storage. CSV or PARQUET
	file_format = "PARQUET"
	
	#Character used as CSV delimiter
	csv_delimiter = "~"
	
	#Write CSV header or not
	csv_write_header = true
	
	#Compression codec to be used for parquet files. Valid options are snappy, gzip, none
	parquet_compression_coded = "snappy"
	
	#XML documents containing the metadata will be downloaded to this directory
	xml_download_path = "data/contract-registry-raw/"
	
	#Attachment documents will be downloaded to this directory
	attachments_download_path = "data/attachments-data-raw/"
	
	#Textual data parsed for attachment docs via OCR will be stored in this directory
	parsed_attachments_path = "data/attachment-docs-parsed/"

	#Parsed data for registry table will be stored in this directory
	registry_data_path = "data/tbl-registry"

	#Parsed data for attachments table will be stored in this directory
	attachments_data_path = "data/tbl-attachments"

	#Parsed data for contract party table will be stored in this directory
	contract_party_data_path = "data/tbl-contract-party"
	
	#First year for data scraping range
	start_year = 2016
	
	#Last year for data scraping range. Values lower than this will be used in program. I.e for 2019, 2018 will be the last value used.
	end_year = 2019
	
	#First month for data scraping range
	start_month = 1

	#Last month for data scraping range. Values lower than this will be used in program. I.e for 13, 12 will be the last value used.
	end_month = 13
	
	#Charset used while parsing XML data
	xml_charset = "UTF-8"
}

skips{
	#Skip download XML phase
	skip_download_xml = false
	
	#Skip write parsed data phase
	skip_write_parsed_xml = false
	
	#Skip download atachment docs phase
	skip_download_docs = true
	
	#Skip skip OCR parsing of atachment docs phase
	skip_parse_to_text = true
}